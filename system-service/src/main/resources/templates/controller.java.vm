package ${package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.*;
import com.github.common.utils.Response;
import com.github.common.constant.CommonConstant;
import com.github.common.utils.Query;
import $!{package.Entity}.$!{entity};
import $!{package.Service}.$!{entity}Service;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end

@Autowired
private $!{entity}Service $!{table.entityPath}Service;

/**
 * 通过ID查询$!{table.comment}
 *
 * @param id ID
 * @return com.github.common.utils.Response
 */
@GetMapping("/{id}")
public Response get(@PathVariable Long id) {
    if (id == null){
        return Response.errorResponse("ID不能为空");
    }
    return Response.success(this.$!{table.entityPath}Service.getById(id));
}


/**
 * 分页查询$!{table.comment}
 *
 * @param params
 * @return com.github.common.utils.Response
 */
@RequestMapping("/page")
public Response page(@RequestParam Map<String, Object> params, $!{entity} $!{table.entityPath}) {
    return Response.success(this.$!{table.entityPath}Service.page(new Query<$!{entity}>().getPage(params), new QueryWrapper<$!{entity}>()
            .eq(CommonConstant.IS_DELETE, CommonConstant.INT_STATUS_NORMAL)));
}

/**
 * 添加$!{table.comment}
 * @param  $!{table.entityPath}  实体
 * @return com.github.common.utils.Response<$!{entity}>
 */
@PostMapping("/add")
public Response add(@RequestBody $!{entity} $!{table.entityPath}) {
    //TODO 添加数据校验
    boolean res = this.$!{table.entityPath}Service.save($!{table.entityPath});
    if (res){
        return Response.successResponse("操作成功");
    }
    return Response.errorResponse("操作失败");
}

/**
 * 删除$!{table.comment}
 * @param id ID
 * @return com.github.common.utils.Response<$!{entity}>
 */
@DeleteMapping("/{id}")
public Response delete(@PathVariable Long id) {
    if (id == null){
        return Response.errorResponse("ID不能为空");
    }
    $!{entity} $!{table.entityPath} = new $!{entity}();
    $!{table.entityPath}.setId(id);
    $!{table.entityPath}.setUpdateTime(new Date());
    $!{table.entityPath}.setIsDelete(CommonConstant.INT_STATUS_DEL);
    boolean res = this.$!{table.entityPath}Service.updateById($!{table.entityPath});
    if (res){
        return Response.successResponse("操作成功");
    }
    return Response.errorResponse("操作失败");
}

/**
 * 编辑$!{table.comment}
 * @param  $!{table.entityPath}  实体
 * @return com.github.common.utils.Response<$!{entity}>
 */
@PutMapping("/edit")
public Response edit(@RequestBody $!{entity} $!{table.entityPath}) {
    if ($!{table.entityPath}.getId() == null){
        return Response.errorResponse("ID不能为空");
    }
    //TODO 添加数据校验
    $!{table.entityPath}.setUpdateTime(new Date());
    boolean res = this.$!{table.entityPath}Service.updateById($!{table.entityPath});
    if (res){
        return Response.successResponse("操作成功");
    }
    return Response.errorResponse("操作失败");
}

        }
#end